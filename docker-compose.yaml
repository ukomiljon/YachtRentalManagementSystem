version: "3.8"

services:
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      target: development
    ports:
      - 8000:8000
    restart: on-failure
    hostname: api-gateway
    depends_on:
      # - auth-service
      # - user-service
      # - booking-service
      # - payment-service
      # - notification-service
      # - inventory-service
      # - openai-service
      - postgres-db
      - mongo-db
      - rabbitmq
    networks:
      - service-network

  # auth-service:
  #   container_name: auth-microservice
  #   build:
  #     context: ./microservices/auth-service
  #     target: development
  #   ports:
  #     - 8001:8000
  #   restart: on-failure
  #   depends_on:
  #     - postgres-db
  #     - mongo-db
  #     - notification-service
  #     - rabbitmq
  #   networks:
  #     - service-network

  # user-service:
  #   container_name: user-microservice
  #   build:
  #     context: ./microservices/user-service
  #     target: development
  #   ports:
  #     - 8002:8000
  #   restart: on-failure
  #   depends_on:
  #     - postgres-db
  #     - mongo-db
  #     - auth-service
  #     - rabbitmq
  #   networks:
  #     - service-network

  # inventory-service:
  #   container_name: inventory-microservice
  #   build:
  #     context: ./microservices/inventory-service
  #     target: development
  #   ports:
  #     - 8003:8000
  #   restart: on-failure
  #   depends_on:
  #     - postgres-db
  #     - mongo-db
  #     - auth-service
  #     - rabbitmq
  #   networks:
  #     - service-network

  # booking-service:
  #   container_name: booking-microservice
  #   build:
  #     context: ./microservices/booking-service
  #     target: development
  #   ports:
  #     - 8004:8000
  #   restart: on-failure
  #   depends_on:
  #     - postgres-db
  #     - mongo-db
  #     - auth-service
  #     - rabbitmq
  #   networks:
  #     - service-network

  # payment-service:
  #   container_name: payment-microservice
  #   build:
  #     context: ./microservices/payment-service
  #     target: development
  #   ports:
  #     - 8005:8000
  #   restart: on-failure
  #   depends_on:
  #     - postgres-db
  #     - mongo-db
  #     - auth-service
  #     - rabbitmq
  #   networks:
  #     - service-network

  # notification-service:
  #   container_name: notification-microservice
  #   build:
  #     context: ./microservices/notification-service
  #     target: development
  #   ports:
  #     - 8006:8000
  #   restart: on-failure
  #   depends_on:
  #     - postgres-db
  #     - mongo-db
  #     - rabbitmq
  #   networks:
  #     - service-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672  # RabbitMQ default messaging port
      - 15672:15672  # RabbitMQ management console
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    networks:
      - service-network

  postgres-db:
    image: "postgres"
    container_name: postgres-db
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"  # Change this to a secure password or use .env
    networks:
      - service-network

  mongo-db:
    image: mongo
    container_name: mongo-db
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - service-network

networks:
  service-network:  # A single network for all services

volumes:
  postgres:
  mongo_data:
